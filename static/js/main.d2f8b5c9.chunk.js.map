{"version":3,"sources":["Render/Style.module.css","Filter/Style.module.css","redux/Contacts/action.js","Form/Form.js","Filter/Filter.js","Render/RenderContactList.js","App.js","redux/Contacts/reducer.js","redux/store.js","index.js","Form/Style.module.css"],"names":["module","exports","addContact","createAction","number","name","payload","id","shortid","generate","deleteContact","changeFilter","Form","state","handleinput","e","setState","currentTarget","value","handleSubmit","preventDefault","isIncludeName","props","find","contact","alert","onSubmit","reset","this","className","style","label","input_name","type","pattern","title","required","onChange","input_tel","btn_add","Component","connect","contacts","items","dispatch","data","action","actions","getVisibalContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","onDeleteContact","map","contact_item","btn_del","onClick","App","submitForm","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d2f8b5c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_del\":\"Style_btn_del__3JX_Z\",\"contact_item\":\"Style_contact_item__2icyS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Style_label__1fWmP\"};","import shortid from 'shortid'; \r\n// import types from './types';\r\nimport { createAction  } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const addContact = createAction('contacts/add', ({ number, name }) => ({\r\n    payload: {\r\n        id: shortid.generate(),\r\n        number,\r\n        name,\r\n    }\r\n})\r\n)\r\n\r\n// const addContact = ({number,name}) => ({\r\n//     type: types.ADD,\r\n//     payload: {\r\n//         id: shortid.generate(),\r\n//         number,\r\n//         name,\r\n//     }\r\n// })\r\n\r\n export const deleteContact=createAction('contacts/delete')\r\n// const deleteContact = (contactid) => ({\r\n//     type: types.DELETE,\r\n//     payload: contactid,\r\n// })\r\n\r\n\r\n export const  changeFilter=createAction('contacts/changeFilter')\r\n\r\n// const changeFilter = (text) => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload:text,\r\n// })\r\n\r\n\r\n// export default { addContact, deleteContact, changeFilter }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport style from './Style.module.css'\r\nimport {connect} from 'react-redux'\r\nimport * as action from '../redux/Contacts/action'\r\n\r\n\r\n\r\n\r\nclass Form extends Component{\r\n    state = {\r\n      name: '',\r\n      number: ''\r\n    }\r\n    \r\n  handleinput = (e) => {\r\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value })\r\n  };\r\n      \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isIncludeName = !!this.props.value.find(contact => contact.name === this.state.name)\r\n    isIncludeName && alert(`${this.state.name} is already in contacts`)\r\n    !isIncludeName && this.props.onSubmit(this.state)\r\n \r\n    \r\n    this.reset();\r\n  }\r\n \r\n  \r\n  reset = () => {\r\n    this.setState({ name: '', number: '' })\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        \r\n        <label className={style.label}> Name\r\n          <input\r\n            className={style.input_name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleinput}\r\n            value={this.state.name}\r\n          />\r\n        </label> \r\n        <label className={style.label}>Number\r\n          <input\r\n            className={style.input_tel}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleinput}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className={style.btn_add}>Add contact</button>\r\n\r\n      </form>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropsTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = ({ contacts: { items } }) => ({\r\n  value:items\r\n}) \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (data) => dispatch(action.addContact(data)),\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Form);","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport style from './Style.module.css'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../redux/Contacts/action'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className={style.label}> Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n            \r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  onChange: PropsTypes.func.isRequired\r\n}\r\n    \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange:(e)=>dispatch(actions.changeFilter(e.currentTarget.value))\r\n})\r\n\r\n\r\n\r\n\r\nexport default connect(null,mapDispatchToProps)(Filter);","import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../redux/Contacts/action'\r\nimport style from './Style.module.css'\r\n\r\nconst Render = ({ value, onDeleteContact }) => {\r\n\r\n    return (\r\n         <ul>\r\n        {value.map((contact) => {\r\n            return <li className={style.contact_item} key={contact.id}>{contact.name}: {contact.number} <button type='button' className={style.btn_del} onClick={()=>onDeleteContact(contact.id) }>delete</button></li>\r\n          })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nRender.propTypes = {\r\n  value: PropsTypes.array.isRequired,\r\n  onDeleteContact:PropsTypes.func.isRequired\r\n}\r\n\r\n\r\nconst getVisibalContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter))\r\n}\r\n\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n   value:getVisibalContacts(items,filter)\r\n})\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact:(id)=>dispatch(actions.deleteContact(id))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Render);","import React, { Component } from 'react';\r\nimport Form from './Form/Form'\r\nimport Filter from './Filter/Filter'\r\nimport Render from './Render/RenderContactList'\r\n\r\nclass App extends Component{\r\n\r\n\r\n\r\n  render() {\r\n   \r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <Form onSubmit={this.submitForm} />\r\n         <h2>Contacts</h2>\r\n        <Filter />\r\n        <Render/>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n// import types from './types';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './action'\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, {payload}) => [...state, payload],\r\n    [actions.deleteContact]:(state, {payload})=>state.filter(contact => contact.id !== payload),\r\n})\r\n\r\n\r\n// const items = (state = [], {type,payload}) => {\r\n//     switch (type) {\r\n//         case types.ADD:\r\n//             return [...state, payload];\r\n//         case types.DELETE:\r\n//             return state.filter(contact => contact.id !== payload);   \r\n//         default:\r\n//             return state;\r\n//     }\r\n    \r\n// }\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]:(_,{payload})=>payload,\r\n})\r\n\r\n\r\n// const filter = (state = '', {type,payload}) => {\r\n//     switch (type) {\r\n//         case [actions.changeFilter]:\r\n//             return payload\r\n//         default:\r\n//          return  state\r\n//     }  \r\n// }\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { combineReducers } from 'redux';\r\n// import types from './types';\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n\r\n// export default combineReducers({\r\n//   items,\r\n//   filter,\r\n// });","import contactsReducer from './Contacts/reducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport logger from 'redux-logger'\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n    storage,\r\n   blacklist: ['filter'],\r\n}\r\n\r\nconst middleware=[...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),logger]\r\n\r\n// const rootReducer=combineReducers({\r\n//  contacts:persistReducer(persistConfig,contactsReducer),\r\n//     })\r\n\r\n// const store = createStore(rootReducer,composeWithDevTools());\r\n// const persistedReducer =persistReducer(persistConfig,rootReducer)\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n contacts:persistReducer(contactsPersistConfig,contactsReducer),\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV ==='development',\r\n})\r\n\r\n export let persistor = persistStore(store)\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as store from './redux/store'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux';\n\nimport 'modern-normalize/modern-normalize.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Style_label__26Jqq\",\"input_name\":\"Style_input_name__2b7kk\",\"input_tel\":\"Style_input_tel__gfw_S\",\"btn_add\":\"Style_btn_add__Axy3d\"};"],"sourceRoot":""}